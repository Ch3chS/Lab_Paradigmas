#lang racket

;-------------------------------------------------- Exportaciones ------------------------------------------------------------------------------------

(provide (all-defined-out))

;-----------------------------------------------------------------------------------------------------------------------------------------------------


;-------------------------------------------------- Pertenencia --------------------------------------------------------------------------------------



;-----------------------------------------------------------------------------------------------------------------------------------------------------

(define image? (lambda (image)
                 (if (and (list? image) (not (equal? image (list -1 -1 null))))
                     (if (= (length image) 3)
                         (if (and (number? (car image)) (and (number? (cadr image)) (list? (caddr image))))
                          #t
                          #f
                          )
                         #f
                         )
                     #f
                     )))

;-------------------------------------------------- Selectores ---------------------------------------------------------------------------------------

(define getwidth (lambda (image)
                        (if (image? image)
                            (car image)
                            -1
                         )))

(define getheight (lambda (image)
                        (if (image? image)
                            (cadr image)
                            -1
                         )))

(define getpixels (lambda (image)
                        (if (image? image)
                            (caddr image)
                            null
                         )))
